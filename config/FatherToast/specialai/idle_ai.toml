# specialai:idle_ai.toml
# This config contains options for idle behaviors - actions taken by mobs when they are bored.

	# Entity List fields: General format = [ "namespace:entity_type value1 value2 ...", ... ]
	#   Entity lists are arrays of entity types. Some entity lists specify a number of values linked to each entity type.
	#   Entity types are defined by their key in the entity registry, usually following the pattern 'namespace:entity_name'.
	#   'default' can be used instead of an entity type registry key to provide default values for all entities.
	#   An asterisk '*' can be used to match multiple entity types. For example, 'minecraft:*' will match all vanilla entities.
	#   List entries by default match any entity type derived from (i.e. based on) their entity type. For example, '~minecraft:zombie'.
	#     There is no steadfast rule about extending, even in vanilla, but the hope is that mod-added mobs will extend their base mob.

	# Block List fields: General format = [ "namespace:block_name[property1=value1,...]", ... ]
	#   Block lists are arrays of blocks and partial block states.
	#   Blocks are defined by their key in the block registry, usually following the pattern 'namespace:block_name'.
	#   An asterisk '*' can be used to match multiple blocks. For example, 'minecraft:*' will match all vanilla blocks.
	#   List entries by default match any block state. The block states to match can be narrowed down by specifying properties.
	#     The syntax for block state properties is the same as for commands. Any properties not specified will match any value.
	#     For example, 'minecraft:beehive[honey_level=5]' will match any full beehives, regardless of the direction they face.


# Category: idle_general
# Options that affect all idle behaviors for monsters (griefing and fiddling).

	# Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
	# <Number> Range: ≥ 0.0, Default: 3.5
	idle_general.reach = 3.5

	# The range at which mobs will search for blocks to target horizontally (xz-plane) and vertically (y-axis).
	# <Integer> Range: ≥ 1, Default: 12
	idle_general.scan_range.horizontal = 12
	# <Integer> Range: ≥ 1, Default: 6
	idle_general.scan_range.vertical = 6

	# The number of ticks between each block scan.
	# <Integer> Range: ≥ 1, Default: 2
	idle_general.scan_delay = 2
	# The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
	# <Integer> Range: ≥ 1, Default: 32
	idle_general.scan_count = 32
	# The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
	# <Integer> Range: ≥ 0, Default: 3000
	idle_general.global_scan_count = 3000


# Category: idle_griefing
# Options to customize monsters' idle block breaking behavior.

	# List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
	# Additional value after the entity type is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
	# <Entity List> Format: [ "namespace:entity_type value", ... ], Default: [ "minecraft:zombie 1.0", "minecraft:creeper 1.0" ]
	#    Range for Values: 0.0 ~ 1.0
	idle_griefing.entities.whitelist = [
		"minecraft:zombie 1.0",
		"minecraft:creeper 1.0"
	]
	# <Entity List> Format: [ "namespace:entity_type", ... ], Default: []
	idle_griefing.entities.blacklist = []

	# If true, mobs will only grief blocks they have the tools to harvest.
	# For example, they will only break furnaces if they have a pickaxe.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_griefing.requires_tools = true

	# If true, blocks griefed by mobs will leave item drops.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_griefing.leaves_drops = true
	# If true, a loud snapping sound (the vanilla door break sound) will be played when a block
	# is broken, which is audible regardless of distance.
	# <Boolean> Valid Values: { true, false }, Default: false
	idle_griefing.break_sound = false

	# The block breaking speed multiplier for mobs griefing blocks, relative to the player's block breaking speed.
	# <Number> Range: ≥ 0.0, Default: 0.5
	idle_griefing.break_speed = 0.5
	# If true, creepers will be upset about not having arms to grief blocks with and resort to what they know best.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_griefing.mad_creepers = false

	# If true, idle griefing AI will automatically target all light sources (light value > 1).
	# This will do its best to avoid natural sources such as fire and redstone ore.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_griefing.targets.auto_target_lights = true
	# If true, idle griefing AI will automatically target all blocks that derive from the vanilla beds.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_griefing.targets.auto_target_beds = true
	# List of blocks that can be broken by the idle griefing AI.
	# <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ minecraft:farmland, minecraft:beehive, minecraft:crafting_table, minecraft:furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, minecraft:anvil, minecraft:chipped_anvil, minecraft:damaged_anvil, minecraft:scaffolding, minecraft:loom, minecraft:smoker, minecraft:blast_furnace, minecraft:cartography_table, minecraft:fletching_table, minecraft:grindstone, minecraft:smithing_table, minecraft:stonecutter, outer_end:azure_ladder, betterendforge:end_stone_furnace, betterendforge:aeternium_anvil, betterendforge:mossy_glowshroom_crafting_table, betterendforge:mossy_glowshroom_ladder, betterendforge:lacugrove_crafting_table, betterendforge:lacugrove_ladder, betterendforge:end_lotus_crafting_table, betterendforge:end_lotus_ladder, betterendforge:pythadendron_crafting_table, betterendforge:pythadendron_ladder, betterendforge:dragon_tree_crafting_table, betterendforge:dragon_tree_ladder, betterendforge:tenanea_crafting_table, betterendforge:tenanea_ladder, betterendforge:helix_tree_crafting_table, betterendforge:helix_tree_ladder, betterendforge:umbrella_tree_crafting_table, betterendforge:umbrella_tree_ladder, betterendforge:jellyshroom_crafting_table, betterendforge:jellyshroom_ladder, betterendforge:lucernia_crafting_table, betterendforge:lucernia_ladder, betterendforge:flavolite_furnace, betterendforge:violecite_furnace, betterendforge:sulphuric_rock_furnace, betterendforge:thallasium_anvil, betterendforge:terminite_anvil, upgrade_aquatic:driftwood_ladder, upgrade_aquatic:river_ladder, endergetic:poise_ladder, quark:spruce_ladder, quark:birch_ladder, quark:jungle_ladder, quark:acacia_ladder, quark:dark_oak_ladder, quark:crimson_ladder, quark:warped_ladder, quark:iron_ladder, quark:matrix_enchanter, byg:aspen_crafting_table, byg:baobab_crafting_table, byg:blue_enchanted_crafting_table, byg:cherry_crafting_table, byg:cika_crafting_table, byg:cypress_crafting_table, byg:ebony_crafting_table, byg:fir_crafting_table, byg:green_enchanted_crafting_table, byg:holly_crafting_table, byg:jacaranda_crafting_table, byg:mahogany_crafting_table, byg:mangrove_crafting_table, byg:maple_crafting_table, byg:pine_crafting_table, byg:rainbow_eucalyptus_crafting_table, byg:redwood_crafting_table, byg:skyris_crafting_table, byg:willow_crafting_table, byg:witch_hazel_crafting_table, byg:zelkova_crafting_table, byg:sythian_crafting_table, byg:embur_crafting_table, byg:palm_crafting_table, byg:lament_crafting_table, byg:bulbis_crafting_table, byg:nightshade_crafting_table, byg:ether_crafting_table, byg:imparius_crafting_table, byg:sythian_scaffolding, charm:kiln, charm:oak_ladder, charm:spruce_ladder, charm:birch_ladder, charm:jungle_ladder, charm:acacia_ladder, charm:dark_oak_ladder, charm:crimson_ladder, charm:warped_ladder, charm:woodcutter ]
	idle_griefing.targets.whitelist = [
		"minecraft:farmland",
		"minecraft:beehive",
		"minecraft:crafting_table",
		"minecraft:furnace",
		"minecraft:ladder",
		"minecraft:enchanting_table",
		"minecraft:brewing_stand",
		"minecraft:anvil",
		"minecraft:chipped_anvil",
		"minecraft:damaged_anvil",
		"minecraft:scaffolding",
		"minecraft:loom",
		"minecraft:smoker",
		"minecraft:blast_furnace",
		"minecraft:cartography_table",
		"minecraft:fletching_table",
		"minecraft:grindstone",
		"minecraft:smithing_table",
		"minecraft:stonecutter",
		"upgrade_aquatic:driftwood_ladder",
		"upgrade_aquatic:river_ladder",
		"quark:matrix_enchanter",
		"quark:spruce_ladder",
		"quark:birch_ladder",
		"quark:jungle_ladder",
		"quark:acacia_ladder",
		"quark:dark_oak_ladder",
		"quark:crimson_ladder",
		"quark:warped_ladder",
		"quark:iron_ladder",
		"charm:kiln",
		"charm:oak_ladder",
		"charm:spruce_ladder",
		"charm:birch_ladder",
		"charm:jungle_ladder",
		"charm:acacia_ladder",
		"charm:dark_oak_ladder",
		"charm:crimson_ladder",
		"charm:warped_ladder",
		"charm:woodcutter"
	]
	# Like "grief_targets.whitelist", but these blocks will not be targeted if they have a loot table tag.
	# For example, unopened dungeon chests will not be targeted.
	# <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ minecraft:chest, minecraft:ender_chest, minecraft:trapped_chest, minecraft:barrel, outer_end:azure_chest, outer_end:azure_trapped_chest, iceandfire:ghost_chest, betterendforge:mossy_glowshroom_chest, betterendforge:mossy_glowshroom_barrel, betterendforge:lacugrove_chest, betterendforge:lacugrove_barrel, betterendforge:end_lotus_chest, betterendforge:end_lotus_barrel, betterendforge:pythadendron_chest, betterendforge:pythadendron_barrel, betterendforge:dragon_tree_chest, betterendforge:dragon_tree_barrel, betterendforge:tenanea_chest, betterendforge:tenanea_barrel, betterendforge:helix_tree_chest, betterendforge:helix_tree_barrel, betterendforge:umbrella_tree_chest, betterendforge:umbrella_tree_barrel, betterendforge:jellyshroom_chest, betterendforge:jellyshroom_barrel, betterendforge:lucernia_chest, betterendforge:lucernia_barrel, upgrade_aquatic:driftwood_chest, upgrade_aquatic:driftwood_trapped_chest, upgrade_aquatic:river_chest, upgrade_aquatic:river_trapped_chest, endergetic:poise_chest, endergetic:poise_trapped_chest, quark:oak_chest, quark:spruce_chest, quark:birch_chest, quark:jungle_chest, quark:acacia_chest, quark:dark_oak_chest, quark:crimson_chest, quark:warped_chest, quark:nether_brick_chest, quark:purpur_chest, quark:prismarine_chest, quark:mushroom_chest, quark:oak_trapped_chest, quark:spruce_trapped_chest, quark:birch_trapped_chest, quark:jungle_trapped_chest, quark:acacia_trapped_chest, quark:dark_oak_trapped_chest, quark:crimson_trapped_chest, quark:warped_trapped_chest, quark:nether_brick_trapped_chest, quark:purpur_trapped_chest, quark:prismarine_trapped_chest, quark:mushroom_trapped_chest, aquaculture:neptunes_bounty, charm:oak_barrel, charm:spruce_barrel, charm:birch_barrel, charm:jungle_barrel, charm:acacia_barrel, charm:dark_oak_barrel, charm:crimson_barrel, charm:warped_barrel, charm:oak_chest, charm:oak_trapped_chest, charm:spruce_chest, charm:spruce_trapped_chest, charm:birch_chest, charm:birch_trapped_chest, charm:jungle_chest, charm:jungle_trapped_chest, charm:acacia_chest, charm:acacia_trapped_chest, charm:dark_oak_chest, charm:dark_oak_trapped_chest, charm:crimson_chest, charm:crimson_trapped_chest, charm:warped_chest, charm:warped_trapped_chest ]
	idle_griefing.targets.lootable_list = [
		"minecraft:chest",
		"minecraft:ender_chest",
		"minecraft:trapped_chest",
		"minecraft:barrel",
		"upgrade_aquatic:driftwood_chest",
		"upgrade_aquatic:driftwood_trapped_chest",
		"upgrade_aquatic:river_chest",
		"upgrade_aquatic:river_trapped_chest",
		"iceandfire:ghost_chest",
		"quark:oak_chest",
		"quark:spruce_chest",
		"quark:birch_chest",
		"quark:jungle_chest",
		"quark:acacia_chest",
		"quark:dark_oak_chest",
		"quark:crimson_chest",
		"quark:warped_chest",
		"quark:nether_brick_chest",
		"quark:purpur_chest",
		"quark:prismarine_chest",
		"quark:mushroom_chest",
		"quark:oak_trapped_chest",
		"quark:spruce_trapped_chest",
		"quark:birch_trapped_chest",
		"quark:jungle_trapped_chest",
		"quark:acacia_trapped_chest",
		"quark:dark_oak_trapped_chest",
		"quark:crimson_trapped_chest",
		"quark:warped_trapped_chest",
		"quark:nether_brick_trapped_chest",
		"quark:purpur_trapped_chest",
		"quark:prismarine_trapped_chest",
		"quark:mushroom_trapped_chest",
		"charm:oak_barrel",
		"charm:spruce_barrel",
		"charm:birch_barrel",
		"charm:jungle_barrel",
		"charm:acacia_barrel",
		"charm:dark_oak_barrel",
		"charm:crimson_barrel",
		"charm:warped_barrel",
		"charm:oak_chest",
		"charm:oak_trapped_chest",
		"charm:spruce_chest",
		"charm:spruce_trapped_chest",
		"charm:birch_chest",
		"charm:birch_trapped_chest",
		"charm:jungle_chest",
		"charm:jungle_trapped_chest",
		"charm:acacia_chest",
		"charm:acacia_trapped_chest",
		"charm:dark_oak_chest",
		"charm:dark_oak_trapped_chest",
		"charm:crimson_chest",
		"charm:crimson_trapped_chest",
		"charm:warped_chest",
		"charm:warped_trapped_chest"
	]
	# <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: []
	idle_griefing.targets.blacklist = []


# Category: idle_fiddling
# Options to customize monsters' idle fiddling behavior (block interaction).

	# List of mobs that can gain passive fiddling AI (note that the entity must have task-based AI enabled).
	# Additional value after the entity type is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
	# <Entity List> Format: [ "namespace:entity_type value", ... ], Default: [ "minecraft:skeleton 1.0", "minecraft:stray 1.0", "minecraft:wither_skeleton 1.0", "minecraft:zombified_piglin 1.0", "minecraft:piglin 1.0" ]
	#    Range for Values: 0.0 ~ 1.0
	idle_fiddling.entities.whitelist = [
		"minecraft:skeleton 1.0",
		"minecraft:stray 1.0",
		"minecraft:wither_skeleton 1.0",
		"minecraft:zombified_piglin 1.0",
		"minecraft:piglin 1.0"
	]
	# <Entity List> Format: [ "namespace:entity_type", ... ], Default: []
	idle_fiddling.entities.blacklist = []

	# If true, idle fiddling AI will automatically target all blocks that derive from
	# the vanilla levers and buttons.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_fiddling.targets.auto_target_switches = true
	# If true, idle fiddling AI will automatically target all non-metal blocks that derive
	# from the vanilla doors, fence gates, and trapdoors.
	# <Boolean> Valid Values: { true, false }, Default: true
	idle_fiddling.targets.auto_target_doors = true
	# List of blocks that can be interacted with by the idle fiddling AI.
	# <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ minecraft:repeater, minecraft:comparator, minecraft:tnt, minecraft:cake ]
	idle_fiddling.targets.whitelist = [
		"minecraft:repeater",
		"minecraft:comparator",
		"minecraft:tnt",
		"minecraft:cake"
	]
	# <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: []
	idle_fiddling.targets.blacklist = []
